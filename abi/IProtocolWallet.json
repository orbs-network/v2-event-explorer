{
  "contractName": "IProtocolWallet",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "client",
          "type": "address"
        }
      ],
      "name": "ClientSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "EmergencyWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "added",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "total",
          "type": "uint256"
        }
      ],
      "name": "FundsAddedToPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxAnnualRate",
          "type": "uint256"
        }
      ],
      "name": "MaxAnnualRateSet",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "topUp",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "annual_rate",
          "type": "uint256"
        }
      ],
      "name": "setMaxAnnualRate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "emergencyWithdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "client",
          "type": "address"
        }
      ],
      "name": "setClient",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"}],\"name\":\"ClientSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"EmergencyWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"added\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"FundsAddedToPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxAnnualRate\",\"type\":\"uint256\"}],\"name\":\"MaxAnnualRateSet\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"}],\"name\":\"setClient\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"annual_rate\",\"type\":\"uint256\"}],\"name\":\"setMaxAnnualRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"topUp\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"emergencyWithdraw()\":{\"details\":\"transfer the entire pool's balance to a new wallet.\"},\"getBalance()\":{\"details\":\"Returns the address of the underlying staked token.\",\"return\":\"IERC20 The address of the token.\"},\"getToken()\":{\"details\":\"Returns the address of the underlying staked token.\",\"return\":\"IERC20 The address of the token.\"},\"setClient(address)\":{\"details\":\"sets the address of the new contract\"},\"setMaxAnnualRate(uint256)\":{\"details\":\"Sets a new transfer rate for the Orbs pool.\"},\"topUp(uint256)\":{\"details\":\"Transfers the given amount of orbs tokens form the sender to this contract an update the pool.\"},\"withdraw(uint256)\":{\"details\":\"Withdraw from pool to a the sender's address, limited by the pool's MaxRate. A maximum of MaxRate x time period since the last Orbs transfer may be transferred out. Flow: PoolWallet.approveTransfer(amount); ERC20.transferFrom(PoolWallet, client, amount)\"}},\"title\":\"Protocol Wallet interface\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/aviramstern/GolandProjects/orbs-ethereum-contracts-v2/contracts/spec_interfaces/IProtocolWallet.sol\":\"IProtocolWallet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/aviramstern/GolandProjects/orbs-ethereum-contracts-v2/contracts/spec_interfaces/IContractRegistry.sol\":{\"keccak256\":\"0x6af72993f6951883689d3e90e92861e4de1779810f9e0ace7212f12af251255c\",\"urls\":[\"bzz-raw://772374609c24adfc2e1e6ca8157e4d9b9b730636ddef7c91353492f0b15738c6\",\"dweb:/ipfs/QmTAZvGKEy4CaA8jQG4LkXDiBeL5CbyWMg6ypTVXCm1ipM\"]},\"/Users/aviramstern/GolandProjects/orbs-ethereum-contracts-v2/contracts/spec_interfaces/IProtocolWallet.sol\":{\"keccak256\":\"0xbb65225d2f09ea8fc444ac97a5a6e9e767d2d3bc7716c49228ae3ae6dcc94cbc\",\"urls\":[\"bzz-raw://4367268f8966779c77c0283826baa22d38c255c3f3d82a4669a2ea0c384b8833\",\"dweb:/ipfs/QmZr6S27qDJpeaoMWYdtXQGRp5S9SCZpQ95ZxU8pZAXYhu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity 0.5.16;\nimport \"../spec_interfaces/IContractRegistry.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\npragma solidity 0.5.16;\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n/// @title Protocol Wallet interface\ninterface IProtocolWallet {\n    event FundsAddedToPool(uint256 added, uint256 total);\n    event ClientSet(address client);\n    event MaxAnnualRateSet(uint256 maxAnnualRate);\n    event EmergencyWithdrawal(address addr);\n\n    /// @dev Returns the address of the underlying staked token.\n    /// @return IERC20 The address of the token.\n    function getToken() external view returns (IERC20);\n\n    /// @dev Returns the address of the underlying staked token.\n    /// @return IERC20 The address of the token.\n    function getBalance() external view returns (uint256 balance);\n\n    /// @dev Transfers the given amount of orbs tokens form the sender to this contract an update the pool.\n    function topUp(uint256 amount) external;\n\n    /// @dev Withdraw from pool to a the sender's address, limited by the pool's MaxRate.\n    /// A maximum of MaxRate x time period since the last Orbs transfer may be transferred out.\n    /// Flow:\n    /// PoolWallet.approveTransfer(amount);\n    /// ERC20.transferFrom(PoolWallet, client, amount)\n    function withdraw(uint256 amount) external; /* onlyClient */\n\n    /* Governance */\n    /// @dev Sets a new transfer rate for the Orbs pool.\n    function setMaxAnnualRate(uint256 annual_rate) external; /* onlyMigrationManager */\n\n    /// @dev transfer the entire pool's balance to a new wallet.\n    function emergencyWithdraw() external; /* onlyMigrationManager */\n\n    /// @dev sets the address of the new contract\n    function setClient(address client) external; /* onlyFunctionalManager */\n}\n",
  "sourcePath": "/Users/aviramstern/GolandProjects/orbs-ethereum-contracts-v2/contracts/spec_interfaces/IProtocolWallet.sol",
  "ast": {
    "absolutePath": "/Users/aviramstern/GolandProjects/orbs-ethereum-contracts-v2/contracts/spec_interfaces/IProtocolWallet.sol",
    "exportedSymbols": {
      "IProtocolWallet": [
        11017
      ]
    },
    "id": 11018,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10961,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:31"
      },
      {
        "absolutePath": "/Users/aviramstern/GolandProjects/orbs-ethereum-contracts-v2/contracts/spec_interfaces/IContractRegistry.sol",
        "file": "../spec_interfaces/IContractRegistry.sol",
        "id": 10962,
        "nodeType": "ImportDirective",
        "scope": 11018,
        "sourceUnit": 10535,
        "src": "24:50:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 10963,
        "nodeType": "ImportDirective",
        "scope": 11018,
        "sourceUnit": 11902,
        "src": "75:56:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10964,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "133:23:31"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 10965,
        "nodeType": "ImportDirective",
        "scope": 11018,
        "sourceUnit": 11902,
        "src": "157:56:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title Protocol Wallet interface",
        "fullyImplemented": false,
        "id": 11017,
        "linearizedBaseContracts": [
          11017
        ],
        "name": "IProtocolWallet",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 10971,
            "name": "FundsAddedToPool",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10967,
                  "indexed": false,
                  "name": "added",
                  "nodeType": "VariableDeclaration",
                  "scope": 10971,
                  "src": "306:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10966,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "306:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10969,
                  "indexed": false,
                  "name": "total",
                  "nodeType": "VariableDeclaration",
                  "scope": 10971,
                  "src": "321:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10968,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "321:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "305:30:31"
            },
            "src": "283:53:31"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 10975,
            "name": "ClientSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10973,
                  "indexed": false,
                  "name": "client",
                  "nodeType": "VariableDeclaration",
                  "scope": 10975,
                  "src": "357:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10972,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "356:16:31"
            },
            "src": "341:32:31"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 10979,
            "name": "MaxAnnualRateSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10977,
                  "indexed": false,
                  "name": "maxAnnualRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 10979,
                  "src": "401:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10976,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "401:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "400:23:31"
            },
            "src": "378:46:31"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 10983,
            "name": "EmergencyWithdrawal",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10981,
                  "indexed": false,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 10983,
                  "src": "455:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "454:14:31"
            },
            "src": "429:40:31"
          },
          {
            "body": null,
            "documentation": "@dev Returns the address of the underlying staked token.\n @return IERC20 The address of the token.",
            "id": 10988,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "606:2:31"
            },
            "returnParameters": {
              "id": 10987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10986,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10988,
                  "src": "632:6:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$11901",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10985,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11901,
                    "src": "632:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$11901",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "631:8:31"
            },
            "scope": 11017,
            "src": "589:51:31",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Returns the address of the underlying staked token.\n @return IERC20 The address of the token.",
            "id": 10993,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10989,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "779:2:31"
            },
            "returnParameters": {
              "id": 10992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10991,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 10993,
                  "src": "805:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10990,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "804:17:31"
            },
            "scope": 11017,
            "src": "760:62:31",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Transfers the given amount of orbs tokens form the sender to this contract an update the pool.",
            "id": 10998,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "topUp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10995,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10998,
                  "src": "951:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10994,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "951:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "950:16:31"
            },
            "returnParameters": {
              "id": 10997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "975:0:31"
            },
            "scope": 11017,
            "src": "936:40:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Withdraw from pool to a the sender's address, limited by the pool's MaxRate.\n A maximum of MaxRate x time period since the last Orbs transfer may be transferred out.\n Flow:\n PoolWallet.approveTransfer(amount);\n ERC20.transferFrom(PoolWallet, client, amount)",
            "id": 11003,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11000,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11003,
                  "src": "1299:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10999,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1298:16:31"
            },
            "returnParameters": {
              "id": 11002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1323:0:31"
            },
            "scope": 11017,
            "src": "1281:43:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Sets a new transfer rate for the Orbs pool.",
            "id": 11008,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setMaxAnnualRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11005,
                  "name": "annual_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 11008,
                  "src": "1451:19:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11004,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1451:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1450:21:31"
            },
            "returnParameters": {
              "id": 11007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1480:0:31"
            },
            "scope": 11017,
            "src": "1425:56:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev transfer the entire pool's balance to a new wallet.",
            "id": 11011,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11009,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1605:2:31"
            },
            "returnParameters": {
              "id": 11010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1616:0:31"
            },
            "scope": 11017,
            "src": "1579:38:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev sets the address of the new contract",
            "id": 11016,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setClient",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11013,
                  "name": "client",
                  "nodeType": "VariableDeclaration",
                  "scope": 11016,
                  "src": "1719:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1719:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1718:16:31"
            },
            "returnParameters": {
              "id": 11015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1743:0:31"
            },
            "scope": 11017,
            "src": "1700:44:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 11018,
        "src": "251:1523:31"
      }
    ],
    "src": "0:1775:31"
  },
  "legacyAST": {
    "absolutePath": "/Users/aviramstern/GolandProjects/orbs-ethereum-contracts-v2/contracts/spec_interfaces/IProtocolWallet.sol",
    "exportedSymbols": {
      "IProtocolWallet": [
        11017
      ]
    },
    "id": 11018,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10961,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:31"
      },
      {
        "absolutePath": "/Users/aviramstern/GolandProjects/orbs-ethereum-contracts-v2/contracts/spec_interfaces/IContractRegistry.sol",
        "file": "../spec_interfaces/IContractRegistry.sol",
        "id": 10962,
        "nodeType": "ImportDirective",
        "scope": 11018,
        "sourceUnit": 10535,
        "src": "24:50:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 10963,
        "nodeType": "ImportDirective",
        "scope": 11018,
        "sourceUnit": 11902,
        "src": "75:56:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10964,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "133:23:31"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 10965,
        "nodeType": "ImportDirective",
        "scope": 11018,
        "sourceUnit": 11902,
        "src": "157:56:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title Protocol Wallet interface",
        "fullyImplemented": false,
        "id": 11017,
        "linearizedBaseContracts": [
          11017
        ],
        "name": "IProtocolWallet",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 10971,
            "name": "FundsAddedToPool",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10967,
                  "indexed": false,
                  "name": "added",
                  "nodeType": "VariableDeclaration",
                  "scope": 10971,
                  "src": "306:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10966,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "306:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10969,
                  "indexed": false,
                  "name": "total",
                  "nodeType": "VariableDeclaration",
                  "scope": 10971,
                  "src": "321:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10968,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "321:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "305:30:31"
            },
            "src": "283:53:31"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 10975,
            "name": "ClientSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10973,
                  "indexed": false,
                  "name": "client",
                  "nodeType": "VariableDeclaration",
                  "scope": 10975,
                  "src": "357:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10972,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "356:16:31"
            },
            "src": "341:32:31"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 10979,
            "name": "MaxAnnualRateSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10977,
                  "indexed": false,
                  "name": "maxAnnualRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 10979,
                  "src": "401:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10976,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "401:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "400:23:31"
            },
            "src": "378:46:31"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 10983,
            "name": "EmergencyWithdrawal",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10981,
                  "indexed": false,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 10983,
                  "src": "455:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "454:14:31"
            },
            "src": "429:40:31"
          },
          {
            "body": null,
            "documentation": "@dev Returns the address of the underlying staked token.\n @return IERC20 The address of the token.",
            "id": 10988,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "606:2:31"
            },
            "returnParameters": {
              "id": 10987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10986,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10988,
                  "src": "632:6:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$11901",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10985,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11901,
                    "src": "632:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$11901",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "631:8:31"
            },
            "scope": 11017,
            "src": "589:51:31",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Returns the address of the underlying staked token.\n @return IERC20 The address of the token.",
            "id": 10993,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10989,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "779:2:31"
            },
            "returnParameters": {
              "id": 10992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10991,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 10993,
                  "src": "805:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10990,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "804:17:31"
            },
            "scope": 11017,
            "src": "760:62:31",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Transfers the given amount of orbs tokens form the sender to this contract an update the pool.",
            "id": 10998,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "topUp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10995,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10998,
                  "src": "951:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10994,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "951:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "950:16:31"
            },
            "returnParameters": {
              "id": 10997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "975:0:31"
            },
            "scope": 11017,
            "src": "936:40:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Withdraw from pool to a the sender's address, limited by the pool's MaxRate.\n A maximum of MaxRate x time period since the last Orbs transfer may be transferred out.\n Flow:\n PoolWallet.approveTransfer(amount);\n ERC20.transferFrom(PoolWallet, client, amount)",
            "id": 11003,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11000,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11003,
                  "src": "1299:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10999,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1298:16:31"
            },
            "returnParameters": {
              "id": 11002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1323:0:31"
            },
            "scope": 11017,
            "src": "1281:43:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Sets a new transfer rate for the Orbs pool.",
            "id": 11008,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setMaxAnnualRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11005,
                  "name": "annual_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 11008,
                  "src": "1451:19:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11004,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1451:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1450:21:31"
            },
            "returnParameters": {
              "id": 11007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1480:0:31"
            },
            "scope": 11017,
            "src": "1425:56:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev transfer the entire pool's balance to a new wallet.",
            "id": 11011,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11009,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1605:2:31"
            },
            "returnParameters": {
              "id": 11010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1616:0:31"
            },
            "scope": 11017,
            "src": "1579:38:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev sets the address of the new contract",
            "id": 11016,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setClient",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11013,
                  "name": "client",
                  "nodeType": "VariableDeclaration",
                  "scope": 11016,
                  "src": "1719:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1719:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1718:16:31"
            },
            "returnParameters": {
              "id": 11015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1743:0:31"
            },
            "scope": 11017,
            "src": "1700:44:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 11018,
        "src": "251:1523:31"
      }
    ],
    "src": "0:1775:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-08-06T21:58:43.827Z",
  "devdoc": {
    "methods": {
      "emergencyWithdraw()": {
        "details": "transfer the entire pool's balance to a new wallet."
      },
      "getBalance()": {
        "details": "Returns the address of the underlying staked token.",
        "return": "IERC20 The address of the token."
      },
      "getToken()": {
        "details": "Returns the address of the underlying staked token.",
        "return": "IERC20 The address of the token."
      },
      "setClient(address)": {
        "details": "sets the address of the new contract"
      },
      "setMaxAnnualRate(uint256)": {
        "details": "Sets a new transfer rate for the Orbs pool."
      },
      "topUp(uint256)": {
        "details": "Transfers the given amount of orbs tokens form the sender to this contract an update the pool."
      },
      "withdraw(uint256)": {
        "details": "Withdraw from pool to a the sender's address, limited by the pool's MaxRate. A maximum of MaxRate x time period since the last Orbs transfer may be transferred out. Flow: PoolWallet.approveTransfer(amount); ERC20.transferFrom(PoolWallet, client, amount)"
      }
    },
    "title": "Protocol Wallet interface"
  },
  "userdoc": {
    "methods": {}
  }
}